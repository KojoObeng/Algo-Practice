        prefixSum = defaultdict(int)
        self.count = 0
        
        def dfs(root, currSum):
            if not root:
                return
            
            currSum += root.val
            
           
            
            #1
            if currSum == targetSum:
                self.count +=1
            
            
            #2
            if (currSum - targetSum) in prefixSum:
                self.count += prefixSum[currSum-targetSum]
            
            # must increment afrter
            # only includes prefix sums before this node
            # if we include prefix sums that include this node, then targetSum = 0 would include currSum each time
            prefixSum[currSum] += 1
            
            dfs(root.left, currSum)
            dfs(root.right, currSum)
            
            prefixSum[currSum] -= 1
        
        dfs(root, 0)
        return self.count
            
        