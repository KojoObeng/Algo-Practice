class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        
        if not grid:
            return 0
        
        self.rows = len(grid)
        self.cols = len(grid[0])
        self.directions = ((1,0), (-1, 0), (0, 1), (0,-1))
        count = 0
        
        for row in range(self.rows):
            for col in range(self.cols):
                if grid[row][col] == "1":
                    count += 1
                    self.dfs(row, col, grid)
        return count
                    
    def dfs(self, row, col , grid):
        if (row<0) or (row>=self.rows) or (col<0) or (col>=self.cols) or grid[row][col] != "1":
            return
        grid[row][col] = "-1"
        for direction in self.directions:
            next_row, next_col = row + direction[0], col + direction[1]
            self.dfs(next_row, next_col, grid)
                    
                        