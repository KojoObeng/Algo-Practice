        result = 0
        
        if not root:
            return result
        
        minDict = {}
        maxDict = {}
        
        def dfs(root, depth, width):
            if not root:
                return
            
            if depth not in minDict:
                minDict[depth] = width
                maxDict[depth] = width
            else:
                if width < minDict[depth]:
                    minDict[depth] = width
                if width > maxDict[depth]:
                    maxDict[depth] = width
            
            dfs(root.left, depth+1, width*2)
            dfs(root.right, depth+1, width*2+1)
            
        
        dfs(root, 0, 0)

        
        for depth in minDict.keys():
            result = max(result, maxDict[depth] - minDict[depth])
            