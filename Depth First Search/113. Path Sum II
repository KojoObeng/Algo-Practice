# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        result = []
        
        def dfs(root, currSum, currList):
            if not root:
                return
            if (not root.left and not root.right and currSum - root.val == 0):
                result.append(currList + [root.val])
                return
            else:
                if root.left:          
                    dfs(root.left, currSum-root.val, currList + [root.val])
                if root.right:
                    dfs(root.right, currSum-root.val, currList + [root.val])
        
        
        dfs(root, targetSum, [])
        return result
            
            
        