class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        
        result = []
        
        
        def dfs(currList, currSum, idx):
            sizeOfList = len(currList)
            if (currSum > n) or sizeOfList > k:
                return
            elif (currSum == n) and sizeOfList == k:
                result.append(currList[:])
            else:
                for i in range(idx, 10):
                    currList.append(i)
                    dfs(currList, currSum + i, i+1)
                    currList.pop()

        dfs([], 0, 1)
        return result
        
                
            