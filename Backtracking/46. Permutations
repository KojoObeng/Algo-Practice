class Solution:

    ### Can use Set as well
    def permute(self, nums: List[int]) -> List[List[int]]:
        
        if not nums: return nums
        
        size = len(nums)
        visited = [False] * size
        result = []
        
        def backtrack(curr):
            if len(curr) == size:
                result.append(curr[:])
            
            for i in range(0, size):
                if not visited[i]:
                    curr.append(nums[i])
                    visited[i] = True
                    backtrack(curr)
                    curr.pop()
                    visited[i] = False
        
        
        backtrack([])
        return result
