class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        
        if not prices:
            return 0
        
        minPrice = prices[0]
        maxProfit = 0
        
        for idx in range(len(prices)):
            maxProfitOnThisDay = prices[idx] - minPrice
            maxProfit = max(maxProfit, maxProfitOnThisDay)
            minPrice = min(minPrice, prices[idx])
            
        return maxProfit


class Solution(object):
    def maxProfit(self, prices):
        
        """
        :type prices: List[int]
        :rtype: int
        """
        
        result = 0
        maxProfit = 0
        valley = prices[0]
        
        for i in range(1, len(prices)):
            if prices[i] <= valley:
                valley = prices[i]
            elif (prices[i] - valley > maxProfit):
                maxProfit = prices[i] - valley
        
        return maxProfit
            
            
            
            