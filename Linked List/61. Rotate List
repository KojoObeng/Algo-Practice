# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
    
        
        if not head or not head.next or k == 0: return head
        
        count = 1
        
        prev = None
        curr = head
        while curr != None:
            prev = curr
            curr = curr.next
            count += 1
           
        
        n = count -1
        
        prev.next = head
        
        k = k % n

        
        prev = None
        curr = head
        count = 1
        
        while count < n-k+1 :
            prev = curr
            curr = curr.next
            count += 1
        
        prev.next = None
        
        return curr
        
        
        