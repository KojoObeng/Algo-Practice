# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:
        
        
        if not root:
            return 
        result = []
        reverse = True
        queue = deque([root])
        
        while queue:
            level = []
            for i in range(len(queue)):
                if reverse:
                    curr = queue.popleft()
                    level.append(curr.val)
                    if curr.left:
                        queue.append(curr.left)
                    if curr.right:
                        queue.append(curr.right)
                    
                else:
                    curr = queue.pop()
                    level.append(curr.val)
                    if curr.right:
                        queue.appendleft(curr.right)
                    if curr.left:
                        queue.appendleft(curr.left)
                    
            reverse = not reverse
            result.append(level)

        return result
                    
                    
                    
                
        