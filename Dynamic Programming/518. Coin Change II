class Solution:
    def change(self, amount: int, coins: List[int]) -> int:
        
        
        dp = [0]*(amount + 1)
        dp[0] = 1
        
        for i in range(len(coins)):
            for j in range(1,amount+1):
                if (j - coins[i] >= 0):
                    dp[j] += dp[j-coins[i]]
        return dp[-1]
        
class Solution:
    def change(self, amount: int, coins: List[int]) -> int:
        
        size = len(coins)
        
        dp = [[0 for j in range(amount+1)] for i in range(size)]
        
        for i in range(size):
            dp[i][0] = 1
            
        for j in range(amount+1):
            if j % coins[0] == 0:
                dp[0][j] = 1
            else:
                dp[0][j] = 0
        
        for i in range(1, size):
            for j in range(1, amount + 1):
                if j-coins[i] >= 0:
                    dp[i][j] = dp[i-1][j] + dp[i][j-coins[i]]
                else:
                    dp[i][j] = dp[i-1][j]
                    
        print(dp)
                
        return dp[-1][-1]