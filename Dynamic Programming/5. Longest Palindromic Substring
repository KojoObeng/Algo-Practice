#top half

class Solution:
    def longestPalindrome(self, s: str) -> str:
        
        size = len(s)
        if size < 2:
            return s
        
        result = s[0]
        resultSize = 1
        
        dp = [[False for _ in range(size)] for _ in range(size)]
            
        for j in range(size):
            for i in range(j+1):
                if i == j:
                    dp[i][j] = True
                elif j == i+1:
                    dp[i][j] = s[i] == s[j]
                else:
                    if (s[i] == s[j]) and dp[i+1][j-1]:
                        dp[i][j] = True
                        
                if dp[i][j] and j - i + 1 > len(result):
                    result = s[i:j+1]
                            
        return result