        size = len(nums)

        if size == 1:
            return True
        
        highIndex = 0
        
        for i in range(size):
            if i <= highIndex:
                if nums[i] + i >= highIndex:
                    highIndex = nums[i] + i
            
        return highIndex >= size -1
        

        

class Solution:
    def canJump(self, nums: List[int]) -> bool:

        size = len(nums)
        print(size)
        
        if size == 1:
            return True
        
        highIndex = 0
        
        dp = [False]*size
        dp[0] = True
        
        for i in range(size):
            if nums[i] + i >= highIndex and dp[i] == True:
                highIndex = nums[i] + i
                for j in range(1, nums[i] +1):
                    if i + j <= size -1:
                        dp[i + j] = True
            
            if highIndex >= len(nums) -1:
                break
                    
    
    
        return dp[-1]
        

        