        wordSet = set(wordDict)
        
        size = len(s)
        
        dp = [False]*(size+1)
        dp[0] = True
        
        for start in range(size+1):
            for end in range(max(1,start), size+1):
                if dp[start] and s[start:end] in wordSet:
                    dp[end] = True

        return dp[-1]



        ### Recursion w memo

        class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        @lru_cache
        def wordBreakMemo(s: str, word_dict: FrozenSet[str], start: int):
            if start == len(s):
                return True
            for end in range(start + 1, len(s) + 1):
                if s[start:end] in word_dict and wordBreakMemo(s, word_dict, end):
                    return True
            return False

        return wordBreakMemo(s, frozenset(wordDict), 0)